{"version":3,"file":"static/js/687.95a8582d.chunk.js","mappings":"sLACA,EAAyB,2BAAzB,EAA6D,2B,mBCa7D,EAVmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,gBAAKC,UAAWC,EAAW,IAAMA,EAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAME,UAAWC,EAAW,IAAMA,EAA/C,SAA0DJ,EAAMM,QAG3E,ECXD,EAA0B,yBCQ1B,EANgB,SAACN,GACb,OACI,gBAAKG,UAAWC,EAAhB,SAA4BJ,EAAMO,SAEzC,ECND,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0B,uCCIrGC,GAAcC,EAAAA,EAAAA,GAAiB,IAiBrC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,2BAAhC,EAfuB,SAACX,GAEpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUV,GAC1CF,KAAM,iBAAkBa,YAAY,0BAE/C,0BACI,yCAIf,ICYD,EAzBgB,SAACnB,GAEb,IAAIoB,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAiBJ,GAAIuB,EAAEvB,IAAZuB,EAAEvB,GAArC,IACrCwB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE1B,GAAxC,IAO3C,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKkB,KAEL,iBAAKnB,UAAWC,EAAhB,WACI,yBAAMsB,KACN,SAAC,EAAD,CAAgBd,SAXR,SAACiB,GACjB7B,EAAM8B,YAAYD,EAAOE,eAC5B,SAaJ,E,oBCTD,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACb,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE1B,IAEwB,SAACa,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,EAAAA,EAAAA,mBAA2BJ,GACvC,EAER,IAIGK,EAAAA,EAFJ,CAGEC,E,kJCpBEC,EAA6B,SAAClB,GAAD,MAAY,CACzCmB,OAAQnB,EAAMoB,KAAKD,OADU,EAIpBH,EAAmB,SAACK,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAK3C,MAAMuC,QAET,SAACE,GAAD,UAAeE,KAAK3C,SAFI,SAAC,KAAD,CAAUK,GAAG,UAG/C,KAPsC,GAEXuC,EAAAA,WAQhC,OAAOX,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS,EAE9C,C","sources":["webpack://react-project/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.jsx","webpack://react-project/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__B93v1\",\"active\":\"DialogItem_active__TSZF8\"};","import React from 'react'\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={path} className={s.dialog + \" \" + s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","// extracted by mini-css-extract-plugin\nexport default {\"massage\":\"Message_massage__K4b4X\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.massage}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__u-7aq\",\"dialogsItems\":\"Dialogs_dialogsItems__oZk35\",\"massages\":\"Dialogs_massages__6TCfm\"};","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from '../../common/FormsControls/FormsControls'\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators'\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]}\r\n                       name={'newMessageBody'} placeholder='Enter your message'></Field>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm)","import React from 'react'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport s from './Dialogs.module.css'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n    //let newMessageBodyText = state.newMessageBodyText\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.massages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport {actions} from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(actions.sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import {Navigate} from 'react-router-dom'\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n}"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","dispatch","actions","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}