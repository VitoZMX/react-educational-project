{"version":3,"file":"static/js/88.4b05b2d2.chunk.js","mappings":"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","sources":["webpack://react-project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","webpack://react-project/./src/components/Profile/ProfileInfo/ProfileDataForm.module.css?5c5c","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backgroundProfile\":\"ProfileInfo_backgroundProfile__wLXXj\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__mlQUx\",\"fullName\":\"ProfileInfo_fullName__ha-0w\",\"contact\":\"ProfileInfo_contact__dPimF\"};","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status:</b><span onDoubleClick={activateEditMode}> {props.status || 'No status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <b>Status:</b><input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks","// extracted by mini-css-extract-plugin\nexport default {\"fullName\":\"ProfileDataForm_fullName__5RvdB\",\"contact\":\"ProfileDataForm_contact__eQLJW\"};","import React from 'react'\r\nimport s from './ProfileDataForm.module.css'\r\nimport {Input, createField, Textarea} from '../../common/FormsControls/FormsControls'\r\nimport {reduxForm} from 'redux-form'\r\nimport styles from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Save profile data</button>\r\n        </div>\r\n        {error && <div className={styles.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <div className={s.fullName}>{createField(\"Full name\", \"fullName\", [], Input)}</div>\r\n        </div>\r\n        <div>\r\n            <div><b>Looking for a\r\n                job:</b> {createField(\"lookingForAJob\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}</div>\r\n            <div><b>My professional skills:</b>\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}</div>\r\n        </div>\r\n        <div>\r\n            <div><b>About me:</b> {createField(\"About me\", \"aboutMe\", [], Textarea)}</div>\r\n        </div>\r\n\r\n        <div>\r\n            <b>Contact:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport NoAvatarImg from '../../../assets/images/noimg.jpeg'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport ProfileDataForm from './ProfileDataForm'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id={profile.userId}>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || NoAvatarImg}/>\r\n                <div>\r\n                    {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }}\r\n                                   profile={profile} isOwner={isOwner}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit profile</button>\r\n        </div>}\r\n        <div className={s.fullName}>{profile.fullName}</div>\r\n        <div>\r\n            <div><b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n            {profile.lookingForAJob ?\r\n                <div><b>My professional skills:</b> {profile.lookingForAJobDescription}</div> : null}\r\n        </div>\r\n        <div><b>About me:</b> {profile.aboutMe}</div>\r\n        <div>\r\n            <b>Contact:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}: </b>{contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"conteinerPosts\":\"MyPosts_conteinerPosts__Aytkj\",\"posts\":\"MyPosts_posts__a3lX0\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__wBQrE\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\nimport photoImg from '../../../../assets/images/avaCat.jpeg'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={photoImg} alt='img'/>\r\n            <span>{props.message}</span>\r\n            <div><span>like {props.likeCoun}</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators'\r\nimport {Textarea} from '../../common/FormsControls/FormsControls'\r\n\r\nlet maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log('RENDER MyPosts')\r\n\r\n    let postElements = props.posts.map(p => <Post message={p.message} key={p.id} likeCoun={p.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.conteinerPosts}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'}\r\n                       placeholder='Enter your post...' validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(addNewPostForm)\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} savePhoto={props.savePhoto}\r\n                         profile={props.profile} status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer'\r\nimport {useLocation, useNavigate, useParams} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.router.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (\r\n            <Component {...props} router={{location, navigate, params}}/>\r\n        )\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        getUserProfile, getStatus,\r\n        updateStatus, savePhoto, saveProfile\r\n    }), withRouter)(ProfileContainer)","import {Navigate} from 'react-router-dom'\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","handleSubmit","profile","error","onSubmit","className","styles","s","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","id","userId","src","photos","large","NoAvatarImg","target","files","length","initialValues","formData","then","photoImg","alt","message","likeCoun","maxLength10","maxLengthCreator","MyPosts","React","console","log","postElements","posts","p","likesCount","AddNewPostFormRedux","values","addPost","newPostText","Field","component","name","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","this","router","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withAuthRedirect","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}